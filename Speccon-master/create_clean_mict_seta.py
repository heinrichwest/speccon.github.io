#!/usr/bin/env python3
"""
Create a clean MICT SETA page that uses the centralized value-adds popup
"""

from pathlib import Path

def create_clean_mict_seta():
    """Remove all inline implementations and use centralized scripts"""
    file_path = Path('setas/mict-seta.html')

    if not file_path.exists():
        print("❌ MICT SETA file not found")
        return

    # Read the current file
    with open(file_path, 'r', encoding='utf-8') as f:
        content = f.read()

    # Find the end of the About section
    about_section_end = content.find('</section>\n\n    <!-- Sticky Banner')

    if about_section_end == -1:
        about_section_end = content.find('</section>')
        # Find the last occurrence
        last_section = content.rfind('</section>')
        about_section_end = last_section

    # Find the start of the footer
    footer_start = content.find('    <!-- Footer -->')

    if about_section_end != -1 and footer_start != -1:
        # Replace everything between the last section and footer
        before_popup = content[:about_section_end + len('</section>')]
        after_popup = content[footer_start:]

        clean_content = before_popup + '\n\n    <!-- Sticky Banner and Value-Adds Popup generated by centralized script -->\n\n' + after_popup

        # Remove inline JavaScript for popup functionality
        script_start = clean_content.find('        // Sticky Banner Functionality')
        script_end = clean_content.find('    </script>')

        if script_start != -1 and script_end != -1:
            before_script = clean_content[:script_start]
            after_script = clean_content[script_end:]
            clean_content = before_script + '        // Popup functionality handled by centralized script\n' + after_script

        # Remove banner CSS
        css_patterns = [
            (r'/\* Sticky Banner Styles \*/.*?}', '/* Sticky banner styles in centralized script */'),
            (r'\.sticky-banner \{.*?}', ''),
            (r'\.banner-popup \{.*?}', ''),
            (r'\.banner-popup\.show \{.*?}', '')
        ]

        import re
        for pattern, replacement in css_patterns:
            clean_content = re.sub(pattern, replacement, clean_content, flags=re.DOTALL)

        # Ensure centralized script is included
        if 'value-adds-popup.js' not in clean_content:
            clean_content = clean_content.replace(
                '<script src="https://unpkg.com/lucide@latest"></script>',
                '<script src="https://unpkg.com/lucide@latest"></script>\n    <script src="../js/value-adds-popup.js"></script>'
            )

        # Save the cleaned file
        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(clean_content)

        print("✅ MICT SETA page cleaned successfully")
        print("✅ Now uses centralized value-adds popup with SDF Service")
        print("✅ All inline implementations removed")
    else:
        print("❌ Could not find the sections to clean")

if __name__ == "__main__":
    create_clean_mict_seta()