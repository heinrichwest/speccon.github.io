#!/usr/bin/env python3
"""
Completely fix MER SETA page by removing ALL inline popup implementations
"""

import re
from pathlib import Path

def fix_mer_seta_page():
    """Remove all inline popup implementations from MER SETA page"""
    file_path = Path('setas/mer-seta.html')

    if not file_path.exists():
        print("‚ùå MER SETA file not found")
        return

    with open(file_path, 'r', encoding='utf-8') as f:
        content = f.read()

    print("üîß Fixing MER SETA page...")

    # Remove the entire popup section between the last </section> and <!-- Footer -->
    # Find the last section before the popup
    last_section = content.rfind('</section>\n\n    <!-- Sticky Banner will be generated by centralized script -->')
    footer_start = content.find('    <!-- Footer -->')

    if last_section != -1 and footer_start != -1:
        before_popup = content[:last_section + len('</section>')]
        after_popup = content[footer_start:]

        # Clean content without the inline popup
        clean_content = before_popup + '\n\n    <!-- Sticky Banner and Popup generated by centralized script -->\n\n' + after_popup

        # Remove inline JavaScript
        clean_content = re.sub(
            r'// Sticky Banner Functionality.*?});',
            '// Popup functionality handled by centralized script',
            clean_content,
            flags=re.DOTALL
        )

        # Remove banner CSS
        clean_content = re.sub(
            r'/\* Sticky Banner Styles \*/.*?}',
            '/* Sticky banner styles in centralized script */',
            clean_content,
            flags=re.DOTALL
        )

        clean_content = re.sub(
            r'\.sticky-banner \{.*?}',
            '',
            clean_content,
            flags=re.DOTALL
        )

        clean_content = re.sub(
            r'\.banner-popup \{.*?}',
            '',
            clean_content,
            flags=re.DOTALL
        )

        clean_content = re.sub(
            r'\.banner-popup\.show \{.*?}',
            '',
            clean_content,
            flags=re.DOTALL
        )

        # Save the cleaned file
        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(clean_content)

        print("‚úÖ MER SETA page fixed completely")
        print("‚úÖ Removed all inline popup implementations")
        print("‚úÖ Now uses centralized script with SDF Service")
    else:
        print("‚ùå Could not find section boundaries")

if __name__ == "__main__":
    fix_mer_seta_page()